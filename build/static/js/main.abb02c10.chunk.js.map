{"version":3,"sources":["assets/bg_image.jpg","utils/actions.js","modules/User.js","modules/Events.js","modules/Statistics.js","modules/index.js","store.js","components/header.js","components/login.js","components/calendar.js","utils/calendar.js","components/form.js","components/officeHours.js","components/sponsors.js","containers/home.js","containers/about.js","containers/sponsor.js","index.js"],"names":["module","exports","__webpack_require__","p","createActiontypes","actionTypes","map","type","Object","defineProperty","concat","reduce","types","objectSpread","ACTIONS","INITIAL_STATE","firstName","lastName","email","college","major","quote","paidMember","picture","points","privilege","password","confirmPassword","continent","nationality","gender","birthday","user","loggedIn","loading","error","id","voted","applied","loginUserSuccess","dispatch","firebase","auth","currentUser","database","ref","push","ENTER_APP","payload","loginUserFail","errorMessage","alert","code","message","LOGIN_USER_FAIL","eventList","undefined","committee","title","name","description","date","time","location","eventID","statistics","combineReducers","state","arguments","length","action","FIRST_NAME_CHANGED","LAST_NAME_CHANGED","EMAIL_CHANGED","COLLEGE_CHANGED","MAJOR_CHANGED","PASSWORD_CHANGED","POINTS_CHANGED","PRIVILEGE_CHANGED","PICTURE_CHANGED","CONFIRM_PASSWORD_CHANGED","QUOTE_CHANGED","CONTINENT_CHANGED","NATIONALITY_CHANGED","GENDER_CHANGED","BIRTH_DATE_CHANGED","REGISTRATION_ERROR","SHOW_FIREBASE_ERROR","CREATE_USER","CREATE_USER_SUCCESS","CREATE_USER_FAIL","EDIT_USER","GET_PRIVILEGE","LOGIN_USER","LOAD_USER","LOGOUT_USER","GO_TO_RESET_PASSWORD","GO_TO_LOGIN","GO_TO_PROFILE","GO_TO_REGISTRATION","GO_TO_EDIT_PROFILE_FORM","events","FETCH_EVENTS","FETCH_CODE","CREATE_EVENT","DELETE_EVENTS","CHECK_IN","TYPE_CHANGED","COMMITTEE_CHANGED","TITLE_CHANGED","NAME_CHANGED","DESCRIPTION_CHANGED","DATE_CHANGED","TIME_CHANGED","LOCATION_CHANGED","E_POINTS_CHANGED","EVENT_ID_CHANGED","EVENT_ERROR","GO_TO_CREATE_EVENT","GO_TO_CREATE_EVENT_FROM_EDIT","GO_TO_EVENT","GO_TO_VIEW_EVENT","console","log","FETCH_STATISTICS","history","History","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","connectRouter","rootReducer","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pages","text","link","react_default","a","createElement","className","open","_ref","react_router_dom","to","Login","Component","LoginComponent","active","fields","required","userCredentials","loginUser","_this2","activated","onClick","setState","form_Form","submitName","saveTo","handleSubmit","mapDispatchToProps","_ref3","signInWithEmailAndPassword","then","catch","connect","Calendar","selectedEvent","txtColor","months","Jan","Feb","Mar","April","May","June","July","Aug","Sep","Oct","Nov","Dec","formattedEvents","Array","item","index","assign","temp_date","split","month","Number","day","year","slice","convertNumToDate","sort","b","_a$date","yearA","monthA","dayA","_b$date","yearB","monthB","dayB","event","_this3","eventActive","numOfEvents","backgroundColor","clickedContainer","key","style","num","_this4","_this$props","numOfElements","textAlign","renderItemOne","Form","val","field","input","css","placeholder","value","onChange","changeState","target","options","option","onSubmit","preventDefault","e","stopPropagation","createField","OfficeHours","scheduleRows","officeHourSchedule","rows","organizedData","x","y","count","currentDay","days","dates","addToScheduleTable","organizeSchedule","room","highlighted","cell","i","z","highlight","align","Sponsors","sponsors","width","window","innerWidth","row","href","src","source","onmouseover","maxWidth","height","maxHeight","createSponsors","Home","motto","Math","floor","random","fetchEvents","values","header_Header","fontStyle","calendar_Calendar","officeHours_OfficeHours","sponsors_Sponsors","on","snapshot","Sponsor","color","header","data","label","fetchStatistics","nivo_pie_esm","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","defs","background","size","padding","stagger","rotation","lineWidth","spacing","fill","match","legends","anchor","direction","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","once","document","querySelector","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","render","es","store","lib","react_router","exact","path","home","sponsor"],"mappings":"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","file":"static/js/main.abb02c10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg_image.92da2e7a.jpg\";","export const createActiontypes = actionTypes => actionTypes\n    .map(type => ({\n        [type]: `module/${type}`\n    }))\n    .reduce((types, type) => ({\n        ...types,\n        ...type\n    }), {});","import firebase from 'firebase';\nimport { createActiontypes } from '../utils/actions';\n\n\n// handle all things related to Users\nconst ACTIONS = createActiontypes([\n    'FIRST_NAME_CHANGED', \n    'LAST_NAME_CHANGED',\n    'EMAIL_CHANGED',\n    'MAJOR_CHANGED',\n    'COLLEGE_CHANGED',\n    'POINTS_CHANGED',\n    'PRIVILEGE_CHANGED',\n    'GET_PRIVILEGE',\n    'PICTURE_CHANGED',\n    'PASSWORD_CHANGED',\n    'CONFIRM_PASSWORD_CHANGED',\n    'REGISTRATION_ERROR',\n    'SHOW_FIREBASE_ERROR',\n    'VERIFIED_USER',\n    'LOGIN_USER',\n    'ENTER_APP',\n    'LOAD_USER',\n    'LOGIN_USER_FAIL',\n    'LOGOUT_USER',\n    'CREATE_USER',\n    'CREATE_USER_SUCCESS',\n    'CREATE_USER_FAIL',\n    'EDIT_USER',\n    'CONTINENT_CHANGED',\n    'NATIONALITY_CHANGED',\n    'GENDER_CHANGED',\n    'BIRTH_DATE_CHANGED',\n    'GO_TO_RESET_PASSWORD',\n    'GO_TO_LOGIN',\n    'GO_TO_PROFILE',\n    'GO_TO_REGISTRATION',\n    'GO_TO_EDIT_PROFILE_FORM',\n    'QUOTE_CHANGED',\n    'PAGE_LOAD'\n])\n\nconst INITIAL_STATE = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    college: 'Do not wish to disclose',\n    major: 'Do not wish to disclose',\n    quote: '',\n    paidMember: false,\n    // Using URL below to avoid RN warning of empty source.uri as there's a delay fetching.\n    // Will improve fetching later, just need to get rid of the warning for now.\n    picture: 'https://cdn0.iconfinder.com/data/icons/superuser-web-kit/512/686909-user_people_man_human_head_person-512.png',\n    points: 0,\n    privilege: {},\n    password: '',\n    confirmPassword: '',\n    continent: 'Do not wish to disclose',\n    nationality: 'Do not wish to disclose',\n    gender: 'Do not wish to disclose',\n    birthday: '0000-00-00',\n    user: null,\n    loggedIn: null,\n    loading: false,\n    error: '',\n    id: '',\n    voted: false,\n    applied: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    const {\n        payload\n    } = action;\n\n    switch (action.type) {\n        case ACTIONS.FIRST_NAME_CHANGED:\n            return {\n                ...state,\n                firstName: payload\n            };\n        case ACTIONS.LAST_NAME_CHANGED:\n            return {\n                ...state,\n                lastName: payload\n            };\n        case ACTIONS.EMAIL_CHANGED:\n            return {\n                ...state,\n                email: payload\n            };\n        case ACTIONS.COLLEGE_CHANGED:\n            return {\n                ...state,\n                college: payload\n            };\n        case ACTIONS.MAJOR_CHANGED:\n            return {\n                ...state,\n                major: payload\n            };\n        case ACTIONS.PASSWORD_CHANGED:\n            return {\n                ...state,\n                password: payload\n            };\n        case ACTIONS.POINTS_CHANGED:\n            return {\n                ...state,\n                points: payload\n            };\n        case ACTIONS.PRIVILEGE_CHANGED:\n            return {\n                ...state,\n                privilege: payload\n            };\n        case ACTIONS.PICTURE_CHANGED:\n            return {\n                ...state,\n                picture: payload\n            };\n        case ACTIONS.CONFIRM_PASSWORD_CHANGED:\n            return {\n                ...state,\n                confirmPassword: payload\n            };\n        case ACTIONS.QUOTE_CHANGED:\n            return {\n                ...state,\n                quote: payload\n            };\n        case ACTIONS.CONTINENT_CHANGED:\n            return {\n                ...state,\n                continent: payload\n            };\n        case ACTIONS.NATIONALITY_CHANGED:\n            return {\n                ...state,\n                nationality: payload\n            };\n        case ACTIONS.GENDER_CHANGED:\n            return {\n                ...state,\n                gender: payload\n            };\n        case ACTIONS.BIRTH_DATE_CHANGED:\n            return {\n                ...state,\n                birthday: payload\n            };\n        case ACTIONS.REGISTRATION_ERROR:\n            return {\n                ...state,\n                error: payload,\n            };\n        case ACTIONS.SHOW_FIREBASE_ERROR:\n            return {\n                ...state,\n                error: payload,\n            };\n        case ACTIONS.CREATE_USER:\n            return {\n                ...state,\n                loading: true,\n                    error: ''\n            };\n        case ACTIONS.CREATE_USER_SUCCESS:\n            return {\n                ...state,\n                ...INITIAL_STATE,\n            };\n        case ACTIONS.CREATE_USER_FAIL:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            };\n\n        case ACTIONS.EDIT_USER:\n            return {\n                ...state,\n                firstName: payload\n            };\n\n        case ACTIONS.GET_PRIVILEGE:\n            return {\n                ...state,\n                privilege: payload\n            };\n        case ACTIONS.LOGIN_USER:\n            return {\n                ...state,\n                loading: true,\n                    error: ''\n            };\n        case ACTIONS.ENTER_APP:\n            return {\n                ...state,\n                ...INITIAL_STATE,\n                user: payload,\n                    loggedIn: true,\n            };\n        case ACTIONS.LOAD_USER:\n            return {\n                ...state,\n                firstName: payload.firstName,\n                lastName: payload.lastName,\n                college: payload.college,\n                email: payload.email,\n                major: payload.major,\n                quote: payload.quote,\n                paidMember: payload.paidMember,\n                continent: payload.continent,\n                nationality: payload.nationality,\n                gender: payload.gender,\n                birthday: payload.birthday,\n                points: payload.points,\n                picture: payload.picture,\n                voted: payload.voted,\n                applied: payload.applied,\n                id: payload.id,\n                loading: false\n            };\n        case ACTIONS.LOGIN_USER_FAIL:\n            return {\n                ...state,\n                error: payload,\n                    loading: false,\n                    password: ''\n            };\n        case ACTIONS.LOGOUT_USER:\n            return {\n                ...state,\n                ...INITIAL_STATE,\n            };\n        case ACTIONS.GO_TO_RESET_PASSWORD:\n            return INITIAL_STATE;\n        case ACTIONS.GO_TO_LOGIN:\n            return INITIAL_STATE;\n        case ACTIONS.GO_TO_PROFILE:\n            return state;\n        case ACTIONS.GO_TO_REGISTRATION:\n            return INITIAL_STATE;\n        case ACTIONS.GO_TO_EDIT_PROFILE_FORM:\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport const firstNameChanged = (text) => {\n    return {\n        type: ACTIONS.FIRST_NAME_CHANGED,\n        payload: text\n    };\n};\nexport const lastNameChanged = (text) => {\n    return {\n        type: ACTIONS.LAST_NAME_CHANGED,\n        payload: text\n    };\n};\nexport const emailChanged = (text) => {\n    return {\n        type: ACTIONS.EMAIL_CHANGED,\n        payload: text\n    };\n};\nexport const collegeChanged = (text) => {\n    return {\n        type: ACTIONS.COLLEGE_CHANGED,\n        payload: text\n    };\n};\nexport const majorChanged = (text) => {\n    return {\n        type: ACTIONS.MAJOR_CHANGED,\n        payload: text\n    };\n};\n\nexport const passwordChanged = (text) => {\n    return {\n        type: ACTIONS.PASSWORD_CHANGED,\n        payload: text\n    };\n};\nexport const pointsChanged = (text) => {\n    return {\n        type: ACTIONS.POINTS_CHANGED,\n        payload: text\n    };\n};\nexport const birthDateChanged = (text) => {\n    return {\n        type: ACTIONS.BIRTH_DATE_CHANGED,\n        payload: text\n    };\n}\nexport const continentChanged = (text) => {\n    return {\n        type: ACTIONS.CONTINENT_CHANGED,\n        payload: text\n    };\n}\nexport const nationalityChanged = (text) => {\n    return {\n        type: ACTIONS.NATIONALITY_CHANGED,\n        payload: text\n    };\n}\nexport const genderChanged = (text) => {\n    return {\n        type: ACTIONS.GENDER_CHANGED,\n        payload: text\n    };\n}\nexport const privilegeChanged = (text) => {\n    return {\n        type: ACTIONS.PRIVILEGE_CHANGED,\n        payload: text\n    };\n};\nexport const pictureChanged = (text) => {\n    return {\n        type: ACTIONS.PICTURE_CHANGED,\n        payload: text\n    };\n};\n\nexport const confirmPasswordChanged = (text) => {\n    return {\n        type: ACTIONS.CONFIRM_PASSWORD_CHANGED,\n        payload: text\n    };\n};\n\nexport const quoteChanged = (text) => {\n    return {\n        type: ACTIONS.QUOTE_CHANGED,\n        payload: text\n    };\n};\n\nexport const registrationError = (error) => {\n    return (dispatch) => {\n        dispatch({\n            type: ACTIONS.REGISTRATION_ERROR,\n            payload: error\n        });\n    }\n};\n\nconst showFirebaseError = (dispatch, error) => {\n    let errorMessage;\n\n    switch (error.code) {\n        case 'auth/user-not-found':\n            errorMessage = 'There is no user record corresponding to this identifier';\n            break;\n        case 'auth/invalid-email':\n            errorMessage = 'Enter a valid email';\n            break;\n        case 'auth/wrong-password':\n            errorMessage = 'Incorrect credentials';\n            break;\n        default:\n            errorMessage = error.message;\n    }\n\n    dispatch({\n        type: ACTIONS.SHOW_FIREBASE_ERROR,\n        payload: errorMessage\n    });\n};\n\n// Registration Actions\nexport const createUser = (firstName, lastName, email, college, major, points, picture, password, quote, continent, nationality, gender, birthday) => {\n    return (dispatch) => {\n        dispatch({\n            type: ACTIONS.CREATE_USER\n        });\n\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((user) => createUserSuccess(dispatch, firstName, lastName, email, college, major, points, picture, quote, continent, nationality, gender, birthday))\n            .catch((error) => createUserFail(dispatch, error))\n    };\n};\n\nconst createUserFail = (dispatch, error) => {\n    firebase.auth().signOut();\n    let errorMessage;\n    switch (error.code) {\n        case 'auth/user-not-found':\n            errorMessage = 'There is no user record corresponding to this identifier';\n            break;\n        case 'auth/invalid-email':\n            errorMessage = 'Enter a valid email';\n            break;\n        case 'auth/wrong-password':\n            errorMessage = 'Incorrect credentials';\n            break;\n        default:\n            errorMessage = error.message;\n    }\n\n    dispatch({\n        type: ACTIONS.CREATE_USER_FAIL,\n        payload: errorMessage\n    });\n};\n\nconst createUserSuccess = (dispatch, firstName, lastName, email, college, major, points, picture, quote, continent, nationality, gender, birthday) => {\n    const {\n        currentUser\n    } = firebase.auth();\n\n    firebase.database().ref(`/users/${currentUser.uid}/`).set({\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            college: college,\n            major: major,\n            points: points,\n            picture: picture,\n            quote: quote,\n            continent: continent,\n            nationality: nationality,\n            gender: gender,\n            birthday: birthday,\n            id: currentUser.uid,\n            paidMember: false,\n            voted: false,\n            applied: false\n        })\n        .then(() => firebase.database().ref(`/points/${currentUser.uid}/`).set({\n            firstName: firstName,\n            lastName: lastName,\n            points: points,\n            id: currentUser.uid\n        }))\n        .then(() => firebase.database().ref(`/privileges/${currentUser.uid}/`).set({\n            firstName: firstName,\n            lastName: lastName,\n            user: true,\n            board: false,\n            eboard: false,\n            president: false,\n            id: currentUser.uid,\n            paidMember: false\n        }))\n        .then(() => {\n            currentUser.sendEmailVerification()\n            alert(`We sent a verification to: ${email}. Please open your email and verify your account`)\n        })\n        .then(() => firebase.auth().signOut())\n\n    dispatch({\n        type: ACTIONS.CREATE_USER_SUCCESS,\n    });\n};\n\nexport const editUser = (firstName, lastName, email, college, major, quote, continent, nationality, gender, birthday) => {\n\n    const {\n        currentUser\n    } = firebase.auth();\n\n    firebase.database().ref(`/users/${currentUser.uid}/`).update({\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            college: college,\n            major: major,\n            quote: quote,\n            continent: continent,\n            nationality: nationality,\n            gender: gender,\n            birthday: birthday,\n        })\n        .then(() => firebase.database().ref(`/points/${currentUser.uid}/`).update({\n            firstName: firstName,\n            lastName: lastName,\n        }))\n        .then(() => firebase.database().ref(`/privileges/${currentUser.uid}/`).update({\n            firstName: firstName,\n            lastName: lastName,\n        }))\n        .then(() => alert('Account Updated'))\n\n};\n\nexport const getPrivilege = () => {\n    const {\n        currentUser\n    } = firebase.auth();\n\n    return (dispatch) => {\n        if (currentUser != null) {\n            firebase.database().ref(`/privileges/${currentUser.uid}/`)\n                .on('value', snapshot => {\n                    dispatch({\n                        type: ACTIONS.GET_PRIVILEGE,\n                        payload: snapshot.val(),\n                    })\n                })\n        };\n    };\n}\n\n\n\n\n\n// Login Actions\nconst isVerifiedUser = ({\n    email,\n    password\n}) => {\n    return (dispatch) => {\n        dispatch({\n            type: ACTIONS.VERIFIED_USER\n        });\n    }\n}\n\nexport const resetPassword = ({\n    email\n}) => {\n    return (dispatch) => {\n        dispatch({\n            type: ACTIONS.RESET_PASSWORD\n        });\n\n        firebase.auth().sendPasswordResetEmail(email)\n            .then(() => alert('Reset Started',\n                `If an account with email ${email} exists, a reset password email will be sent. Please check your email.`))\n            .then(() => {}) // go to login\n            .catch(error => showFirebaseError(dispatch, error));\n    };\n}\n\nexport const loginUser = ({\n    email,\n    password\n}) => {\n    console.log('hello')\n    return (dispatch) => {\n        console.log('running')\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            // .then(user => {\n            //     // if (!firebase.auth().currentUser.emailVerified) {\n            //     //     alert('Account must be verified!\\nPlease check your email for verification email')\n            //     //     return Promise.reject({\n            //     //         error: 'Email not Verified'\n            //     //     })\n            //     // }\n            // })\n            .then(user => loginUserSuccess(dispatch, user))\n            .catch(error => loginUserFail(dispatch, error));\n    };\n};\n\nconst loginUserSuccess = (dispatch, user) => {\n   const { \n       currentUser\n   } = firebase.auth();\n   firebase.database().ref('/tests/fucksGiven').push('none');\n    dispatch({\n        type: ACTIONS.ENTER_APP,\n        payload: user\n    });\n};\n\nexport const loadUser = (userID) => {\n    const {\n        currentUser\n    } = firebase.auth();\n    var id = (typeof userID === \"undefined\") ? currentUser.uid : userID;\n    return (dispatch) => {\n        if (currentUser != null) {\n            firebase.database().ref(`/users/${id}/`).on('value', snapshot => {\n                dispatch({\n                    type: ACTIONS.LOAD_USER,\n                    payload: snapshot.val()\n                });\n                dispatch({\n                    type: ACTIONS.PAGE_LOAD,\n                    payload: false\n                });\n            })\n        }\n    };\n};\n\nexport const loginUserFail = (dispatch, error) => {\n    let errorMessage;\n    alert(error.code)\n    switch (error.code) {\n        case 'auth/user-not-found':\n            errorMessage = 'There is no user record corresponding to this identifier';\n            break;\n        case 'auth/invalid-email':\n            errorMessage = 'Enter a valid email';\n            break;\n        case 'auth/wrong-password':\n            errorMessage = 'Incorrect credentials';\n            break;\n        case 'auth/network-request-failed':\n            errorMessage = 'Network error. Check your Internet connectivity.';\n            break;\n        default:\n            errorMessage = error.message;\n    }\n\n    dispatch({\n        type: ACTIONS.LOGIN_USER_FAIL,\n        payload: errorMessage\n    });\n};\n\nexport const logoutUser = () => {\n    return (dispatch) => {\n        dispatch({\n            type: ACTIONS.LOGOUT_USER\n        });\n\n        firebase.auth().signOut()\n            .then(() => {}) //go to login\n            .then(alert('Signed Out', 'Have a great day!'));\n    };\n};\n","import firebase from 'firebase';\nimport { createActiontypes } from '../utils/actions';\n// handle all things related to Elections\nconst ACTIONS = createActiontypes([\n    'FETCH_EVENTS',\n    'CREATE_EVENT',\n    'DELETE_EVENTS',\n    'CHECK_IN',\n    'FETCH_CODE',\n    'TYPE_CHANGED',\n    'COMMITTEE_CHANGED',\n    'TITLE_CHANGED',\n    'NAME_CHANGED',\n    'DESCRIPTION_CHANGED',\n    'DATE_CHANGED',\n    'TIME_CHANGED',\n    'LOCATION_CHANGED',\n    'E_POINTS_CHANGED',\n    'EVENT_ID_CHANGED',\n    'EVENT_ERROR',\n    'PAGE_LOAD'\n]);\n\n\nconst INITIAL_STATE = {\n  eventList: undefined,\n  type: '',\n  committee: '',\n  title: 'Create Event',\n  name: '',\n  description: '',\n  date: '',\n  time: '',\n  location: '',\n  points: 0,\n  eventID: {},\n  code: 'AAAA',\n  error: ''\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  \n  switch (action.type) {\n    case ACTIONS.FETCH_EVENTS:\n      return { ...state,\n        eventList: payload\n      };\n    case ACTIONS.FETCH_CODE:\n      return { ...state,\n        code: payload\n      };\n    case ACTIONS.CREATE_EVENT:\n      return { ...state,\n        error: ''\n      };\n    case ACTIONS.DELETE_EVENTS:\n      return { ...state,\n        type: '',\n        committee: '',\n        name: '',\n        description: '',\n        date: '',\n        time: '',\n        location: '',\n        points: 0,\n        eventID: '',\n        error: ''\n      };\n    case ACTIONS.CHECK_IN:\n      return state;\n    case ACTIONS.TYPE_CHANGED:\n      return { ...state,\n        type: payload\n      };\n    case ACTIONS.COMMITTEE_CHANGED:\n      return { ...state,\n        committee: payload\n      };\n    case ACTIONS.TITLE_CHANGED:\n      return { ...state,\n        title: payload\n      };\n    case ACTIONS.NAME_CHANGED:\n      return { ...state,\n        name: payload\n      };\n    case ACTIONS.DESCRIPTION_CHANGED:\n      return { ...state,\n        description: payload\n      };\n    case ACTIONS.DATE_CHANGED:\n      return { ...state,\n        date: payload\n      };\n    case ACTIONS.TIME_CHANGED:\n      return { ...state,\n        time: payload\n      };\n    case ACTIONS.LOCATION_CHANGED:\n      return { ...state,\n        location: payload\n      };\n    case ACTIONS.E_POINTS_CHANGED:\n      return { ...state,\n        points: payload\n      };\n    case ACTIONS.EVENT_ID_CHANGED:\n      return { ...state,\n        eventID: payload\n      };\n    case ACTIONS.EVENT_ERROR:\n      return { ...state,\n        error: payload,\n      };\n    case ACTIONS.GO_TO_CREATE_EVENT:\n      return {...state,\n        type: '',\n        committee: '',\n        name: '',\n        description: '',\n        date: '',\n        time: '',\n        location: '',\n        points: 0,\n        eventID: '',\n        code: '',\n        error: ''\n      };\n    case ACTIONS.GO_TO_CREATE_EVENT_FROM_EDIT:\n      return state;\n    case ACTIONS.GO_TO_EVENT:\n      return {...state,\n        type: '',\n        committee: '',\n        name: '',\n        description: '',\n        date: '',\n        time: '',\n        location: '',\n        points: 0,\n        eventID: [],\n        code: '',\n        error: ''\n      };\n    case ACTIONS.GO_TO_VIEW_EVENT:\n      return state;\n    default:\n      return state;\n  }\n};\n\nfunction makeCode(length) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\n    for (var i = 0; i < length; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n}\n\nexport const createEvent = (typeU, committeeU, nameU, descriptionU, dateU, timeU, locationU, pointsU ) => {\n  var committee = false;\n\n  if (committeeU !== ''){\n    committee = true;\n  }\n\n  let postRef = firebase.database().ref('/events/').push({\n    type: typeU,\n    committee: committeeU,\n    name: nameU,\n    description: descriptionU,\n    date: dateU,\n    time: timeU,\n    eventActive: false,\n    location: locationU,\n    points: pointsU,\n    code:  makeCode(4)\n  })\n  .then(snapshot => {\n      if (committee === true){\n      firebase.database().ref(`/committees/${committeeU}/events/`).update({ \n        [snapshot.key]: true\n      })\n }\n  })\n    .then(() => alert('Event Created','Successful'))\n    .catch((error) => alert('Event Created Failed', 'Failure'));\n\n\n\n  return (dispatch) => {  \n    dispatch({\n      type: ACTIONS.CREATE_EVENT,\n    })\n  }\n};\n\nexport const openCheckIn = (eventID) => {\n    return () => {\n        firebase.database().ref(`/events/${eventID}/`).update({\n                eventActive: true\n            })\n            .catch((error) => alert('Event Check-In could not be Started!', 'Failure'))\n    }\n};\n\nexport const closeCheckIn = (eventID) => {\n    return () => {\n        firebase.database().ref(`/events/${eventID}/`).update({\n                eventActive: false\n            })\n            .catch((error) => alert('Event Check-In could not be closed!', 'Failure'))\n    }\n};\n\nexport const editEvent = (typeU, committeeU, nameU, descriptionU, dateU, timeU, locationU, pointsU, eventIDU ) => {\n\n    firebase.database().ref(`/events/${eventIDU}`).update({\n            type: typeU,\n            committee: committeeU,\n            name: nameU,\n            description: descriptionU,\n            date: dateU,\n            time: timeU,\n            location: locationU,\n            points: pointsU,\n        })\n        .then(() => alert('Event Edited', 'Successful'))\n        .catch((error) => alert('Event edit Failed', 'Failure'));\n\n    return (dispatch) => {\n        dispatch({\n            type: ACTIONS.CREATE_EVENT,\n        });\n        // Go to event here\n    }\n};\n\nexport const deleteEvents = (eventIDs) => {\n        firebase.database().ref(`events/${eventIDs}`).once('value', snapshot => {\n          if (snapshot.val().committee !== ''){\n            firebase.database().ref(`committees/${snapshot.val().committee}/events/`).update({[eventIDs]: {}})\n          }\n        })\n        .then(() => firebase.database().ref('events').update({[eventIDs]: {}}))\n        .then(() => alert('Event Deleted', 'Successful'))\n        .catch((error) => alert('Event Deletion Failed', 'Failure'));\n\n    return (dispatch) => {\n        dispatch({\n            type: ACTIONS.DELETE_EVENTS,\n        });\n    }\n}\n\nexport const checkIn = (eventID, val) => {\n    const {\n        currentUser\n    } = firebase.auth();\n    var points;\n    return (dispatch) => {\n        firebase.database().ref(`events/${eventID}/eventActive`).once('value', snapshot => {\n            if (snapshot.val())\n                firebase.database().ref(`events/${eventID}/attendance/${currentUser.uid}`).once('value', snapshot => {\n                    if (!snapshot.exists()) {\n                        firebase.database().ref(`points/${currentUser.uid}/points`).once('value', snapshot => {\n                            points = parseInt(snapshot.val()) + parseInt(val);\n                            firebase.database().ref(`events/${eventID}`).once('value', snapshot => {\n                              var realType = snapshot.val().type;\n                                    if (snapshot.val().committee !== ''){\n                                      realType = snapshot.val().committee;\n                                      firebase.database().ref(`committees/${snapshot.val().committee}/events/${eventID}/attendance`).update({[currentUser.uid]: true })\n                                    }\n                                    firebase.database().ref(`events/${eventID}/attendance`).update({\n                                            [currentUser.uid]: true\n                                        })\n                                        .then(() => firebase.database().ref(`points/${currentUser.uid}/points`).set(points))\n                                        .then(() => firebase.database().ref(`points/${currentUser.uid}/breakdown/${realType}/${eventID}`).update({\n                                            points: val,\n                                            name: snapshot.val().name,\n                                            date: snapshot.val().date,\n                                            committee: snapshot.val().committee,\n                                        }))\n                                })\n                                .then(() => firebase.database().ref(`users/${currentUser.uid}/points`).set(points))\n                                .then(() => alert('Checked In', 'Successful'))\n                                .catch((error) => alert('Check In Failed', 'Failure'))\n                        })\n                    } else\n                        alert('You have already attended this event!', 'Failure');\n                })\n            else\n                alert('Event check-in for this event is not open', 'Failure')\n        })\n    };\n}\n\n\nexport const fetchEvents = () => {\n    return (dispatch) => {\n        firebase.database().ref('events/').on('value', snapshot => {\n            const eventList = (snapshot.val());\n            dispatch({\n                type: ACTIONS.FETCH_EVENTS,\n                payload: eventList,\n            });\n        });\n    };\n};\n\nexport const fetchCode = (eventID) => {\n    return (dispatch) => {\n        firebase.database().ref(`events/${eventID}/code`).on('value', snapshot => {\n            const code = snapshot.val();\n            // alert(`${eventID} ${code}`)\n            dispatch({\n                type: ACTIONS.FETCH_CODE,\n                payload: code,\n            });\n        });\n    };\n};\n\nexport const typeChanged = (text) => {\n    return {\n        type: ACTIONS.TYPE_CHANGED,\n        payload: text\n    };\n};\n\nexport const committeeChanged = (text) => {\n  return {\n    type: ACTIONS.COMMITTEE_CHANGED,\n    payload: text\n  };\n};\n\nexport const titleChanged = (text) => {\n    return {\n        type: ACTIONS.TITLE_CHANGED,\n        payload: text\n    };\n};\n\nexport const nameChanged = (text) => {\n    return {\n        type: ACTIONS.NAME_CHANGED,\n        payload: text\n    };\n};\nexport const descriptionChanged = (text) => {\n    return {\n        type: ACTIONS.DESCRIPTION_CHANGED,\n        payload: text\n    };\n};\nexport const dateChanged = (text) => {\n    return {\n        type: ACTIONS.DATE_CHANGED,\n        payload: text\n    };\n};\nexport const timeChanged = (text) => {\n    return {\n        type: ACTIONS.TIME_CHANGED,\n        payload: text\n    };\n};\nexport const locationChanged = (text) => {\n    return {\n        type: ACTIONS.LOCATION_CHANGED,\n        payload: text\n    };\n};\nexport const epointsChanged = (text) => {\n    return {\n        type: ACTIONS.E_POINTS_CHANGED,\n        payload: text\n    };\n};\nexport const eventIDChanged = (text) => {\n    return {\n        type: ACTIONS.EVENT_ID_CHANGED,\n        payload: text\n    };\n};\n\nexport const eventError = (text) => {\n    return {\n        type: ACTIONS.EVENT_ERROR,\n        payload: text\n    };\n};\n\n\n\n// Use this function to update keys or duplicate/copy test data on Firebase -\n// Be careful, especially if setting anything to null as it will delete it on Firebase.\n// Delete in production\n/* export const updateDuplicateDeleteOnFirebase = () => {\n\n  return() => {\n    let update = {\n      \"2018-01-22\": [\n        {id:\"180122GBM\", title: \"First GBM\", description: \"First Spring 2018 General Body Meeting\", location: \"HEC 101\", time: \"6:30PM-7:30PM\", type: \"GBM\", value: 5},\n      ],\n      \"2018-01-25\": [\n        {id:\"180125FCM\", title: \"Fundraising Committee Meeting\", description: \"First Spring 2018 General Body Meeting\", location: \"HEC 101\", time: \"6:30PM-7:30PM\", type: \"GBM\", value: 5},\n      ],\n      \"2018-01-31\": [\n        {id:\"18013MTSH\", title: \"MentorSHPE Meeting\", description: \"First Spring 2018 General Body Meeting\", location: \"HEC 101\", time: \"6:30PM-7:30PM\", type: \"GBM\", value: 5},\n      ],\n    };\n    firebase.database().ref('events').set(update);\n  }\n};\n*/\n","import firebase from 'firebase';\nimport { createActiontypes } from '../utils/actions';\nimport { dispatch } from 'rxjs/internal/observable/range';\n// handle all things related to Elections\nconst ACTIONS = createActiontypes([\n    'FETCH_STATISTICS',\n]);\n\n\nconst INITIAL_STATE = {\n    statistics: {}\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    console.log(action)\n  const { payload } = action;\n  switch (action.type) {\n    case ACTIONS.FETCH_STATISTICS:\n      return { ...state,\n        statistics: payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport const fetchStatistics = () => {\n    console.log(\"hello\")\n        firebase.database().ref(`statistics/`).once('value', snapshot => {\n            console.log(ACTIONS.FETCH_STATISTICS, snapshot.val())\n            return (dispatch) => {\n                dispatch({\n                    type: ACTIONS.FETCH_STATISTICS,\n                    payload: snapshot.val()\n                })\n            }\n        }).catch((error) => {\n            console.log(error, ACTIONS.FETCH_STATISTICS)\n\n            dispatch({\n                type: ACTIONS.FETCH_STATISTICS,\n                payload: {}\n            })\n        })\n}\n","import { combineReducers } from 'redux'\n\nimport user from './User'\nimport events from './Events'\nimport statistics from './Statistics'\n\nexport * from './User'\nexport * from './Events'\nexport * from './Statistics'\n\nexport default combineReducers({\n  user,\n  events,\n  statistics\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport * as History from 'history'\nimport rootReducer from './modules'\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Login } from '../components'\nimport '../style/components/header.css'\nimport '../style/main.css'\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.pages = [\n        {\n            text: \"Home\",\n            link: \"\"\n        },\n        {\n            text: \"Sponsor\",\n            link: \"Sponsor\"\n        },\n        ]\n    }\n\n    componentWillMount() {\n        \n    }\n\n    render() {\n        return (\n            <div className='containerGeneral'>\n                <div className='containerGeneral'>\n                        <ul\n                        className=\"list\"\n                        open={false}\n                        >\n                            {this.pages.map(({text, link}) => (\n                                <Link className=\"listElement\" to={`./${link}`}>{text}</Link>\n                            ))}\n                        </ul>\n                </div>\n                <Login/>\n            </div>\n        )\n    }\n}\n\nexport { Header }\n","import React, { Component } from 'react'\nimport { Form } from '../components'\nimport { loginUser } from '../modules/User'\nimport '../style/main.css'\nimport '../style/components/login.css'\nimport { connect } from 'react-redux'\n\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false\n        }\n        this.fields = [\n            {\n                name: \"email\",\n                type: \"email\",\n                required: true\n            },\n            {\n                name: \"password\",\n                type: \"password\",\n                required: true,\n            },\n        ]\n    }\n    componentWillMount() {\n        \n    }\n    \n    handleSubmit(userCredentials) {\n        this.props.loginUser(userCredentials);\n    }\n    \n    render() {\n        const {\n            active\n        } = this.state;\n        let activated = (active) ? 'loginContainer active' : 'loginContainer';\n        activated += \" unselectable clickable\"\n        return (\n            <div className={activated}\n            onClick={() => {this.setState({active: !active})}}\n            >\n              <Form \n              fields={this.fields}\n              submitName={\"Submit\"}\n              saveTo={(userCredentials) => this.handleSubmit(userCredentials)}\n              />\n              <h1>Login</h1>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    loginUser\n}\n\nlet Login = connect(null, mapDispatchToProps)(LoginComponent)\nexport { Login }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { convertNumToDate, distance } from '../utils';\nimport '../style/components/calendar.css';\nimport '../style/main.css';\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: [],\n            selectedEvent: -1,\n            txtColor: '#000'\n        }\n        this.months = {\n            \"Jan\": 0,\n            \"Feb\": 1,\n            \"Mar\": 2,\n            \"April\": 3,\n            \"May\": 4,\n            \"June\": 5,\n            \"July\": 6,\n            \"Aug\": 7,\n            \"Sep\": 8,\n            \"Oct\": 9,\n            \"Nov\": 10,\n            \"Dec\": 11\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        const {\n            events\n        } = props;\n        let formattedEvents = new Array();\n        console.log(events)\n        if (events && events[0] && events[0].date !== Object(events[0].date)) {\n            events.map((item, index) => {\n                formattedEvents.push(Object.assign({}, item));\n                let date = convertNumToDate(formattedEvents[index].date)\n                formattedEvents[index].date = {};\n                formattedEvents[index].date.day = date.day;\n                formattedEvents[index].date.month = date.month;\n                formattedEvents[index].date.year = date.year;\n            })\n        }\n\n        formattedEvents.sort((a,b) => {\n            const {\n                year: yearA,\n                month: monthA,\n                day: dayA\n            } = a.date;\n\n            const {\n                year: yearB,\n                month: monthB,\n                day: dayB\n            } = b.date;\n            \n            if (yearA >= yearB){\n                console.log(this.months[monthA], this.months[monthB], this.months[monthA] >= this.months[monthB])\n                if (this.months[monthA] >= this.months[monthB]) {\n                    console.log(dayA, dayB, (dayA <= dayB) ? 1 : -1)\n                    return (dayA > dayB) ? 1 : -1;\n                } \n                else return -1;\n            }\n            else return -1;\n        })\n\n        this.setState({ events: formattedEvents })\n    }\n\n    componentWillMount() {\n        \n    }\n\n    renderItemOne(event, index) {\n        const {\n            date,\n            description,\n            eventActive,\n            location,\n            name,\n            points,\n            time,\n        } = event;\n\n        const {\n            selectedEvent\n        } = this.state;\n\n        if (this.state.events.length - index > this.props.numOfEvents) return null;\n\n        \n        let active = (eventActive) ? {backgroundColor: '#fff'} : {backgroundColor: '#fff'}\n        let clickedContainer = (selectedEvent === index) ? \"containerOnClick\" : \"\";\n        clickedContainer += \" container clickable\"\n        return (\n            <div key={name+date+time} className={clickedContainer} style={active}\n            onClick={() => {\n                let num = (selectedEvent === index) ? -1 : index;\n                this.setState({selectedEvent: num})\n            }}\n            >\n                <div className='date unselectable'>\n                    <h2>{date.day}</h2>\n                    <span>{date.month}, {date.year}</span>\n                </div>\n                <div className = 'info unselectable'>\n                    <div className='eventData'>\n                        <h3 className=\"meetingTitle\">{name}</h3>\n                        <p>Time: {time}</p>\n                        <p>Location: {location}</p>\n                        <p>points: {points}</p>\n                    </div>\n                   <div>\n                        <p className='description'>Description: {description}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        const {\n            title,\n            numOfElements\n        } = this.props;\n        \n        return (\n            <div className=\"calendarContainer\">\n                <h3 style={{textAlign: 'center'}}>{title}</h3>\n               {this.state.events.map((event, index) => this.renderItemOne(event, index))}\n            </div>\n        )\n    }\n}\n\nCalendar.propTypes = {\n    title: PropTypes.string,\n\n    events: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            location: PropTypes.string.isRequired,\n            points: PropTypes.number.isRequired,\n            time: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n            committee: PropTypes.string,\n            type: PropTypes.string,\n            eventActive: PropTypes.bool,\n            numOfElements: PropTypes.number,\n        })).isRequired,\n   \n}\n\n\nexport { Calendar }\n","export function convertNumToDate(date) {\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    let temp_date = date.split(\"-\");\n    return {\n        month: months[Number(temp_date[1]) - 1],\n        day: temp_date[2],\n        year: temp_date[0].slice(2,4)\n    };\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n//import { Link } from 'react-router-dom'\nimport '../style/components/form.css'\nimport '../style/main.css'\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    componentWillMount() {\n        \n    }\n\n    changeState(name, val) {\n        if(!val) val = \"\";\n        this.setState({\n            [name]: val\n        })\n\n    }\n\n    createField(field){\n        const {\n            name,\n            type,\n            required,\n            css\n        } = field;\n\n        let input = null;\n        switch(type) {\n            case \"text\":\n            case \"email\":\n            case \"password\":\n            case \"date\":\n            case \"time\":\n                input = <input className=\"general\" required={required} type={type} placeholder={name} value={this.state[name]} onChange={(event) => this.changeState(name, event.target.value)} />\n            break;\n            case \"select\":\n                input = <select className=\"general\">{field.options.map(option => <option value={option}>option</option>)}</select>\n            break;\n            default:\n                console.error(\"Please choose a supported type.\\nSupported types include: ['text','email','password','date','time','select'...]\\n View more types in the form.js component\");            \n            break;\n        }\n        return (\n        <label className=\"fieldContainer\">\n            <div className=\"inputContainer\">\n                {input}\n            </div>\n        </label>\n        )\n    }\n\n    render() {\n        return (\n            <form \n            className=\"notClickable\"\n            onSubmit= {(event) => {\n            event.preventDefault();\n            this.props.saveTo(this.state)}}\n            onClick={(e)=> e.stopPropagation()}\n            >\n                {this.props.fields.map((field) => this.createField(field))}\n                <input className=\"general\" type=\"submit\" value={this.props.submitName} />\n            </form>\n        )\n    }\n}\n\n\nForm.propTypes = {\n    fields: PropTypes.arrayOf(PropTypes.objectOf({\n        name: PropTypes.string,\n        type: PropTypes.string,\n        required: PropTypes.bool\n    })).isRequired,\n    saveTo: PropTypes.func.isRequired,\n    submitName: PropTypes.string\n}\n\nexport { Form }\n","import React, { Component } from 'react'\nimport Collapsible from 'react-collapsible';\nimport '../style/main.css'\nimport '../style/components/officeHours.css'\n\nclass OfficeHours extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n    render() {\n\t\tlet scheduleRows = [], sponsorRows = []\n\t\tscheduleRows = organizeSchedule(this.props.officeHourSchedule)\n\t\t\n        return (\n            <div className='officeHours' id='officeHours'>\n\t\t\t\t<h1 id=\"officeHours\"> Office Hours </h1>\n\t\t\t\t<h3 id=\"officeHours\"> {this.props.officeHourSchedule.room} </h3>\n\t\t\t\t\t<table id=\"officeHours\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{scheduleRows}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n            </div>\n        )\n    }\n}\n\nfunction organizeSchedule(officeHourSchedule){\n\tlet rows = []\n\t//console.log(Object.keys(this.officeHourSchedule.dates))\n\tlet organizedData = []\n\tlet x = 0, y = 0, count = 0\n\t\n\tlet currentDay = officeHourSchedule.days[0]\n\t\n\twhile (count < officeHourSchedule.dates.length){\n\t\tif(officeHourSchedule.dates[x].day == currentDay){\n\t\t\torganizedData.push(officeHourSchedule.dates[x])\n\t\t\tcount++\n\t\t}\n\t\tx++\n\t\tif(x >= officeHourSchedule.dates.length){ //all data has been cycled, array of currentDay is complete\n\t\t\tx = 0 //reset dates counter\n\t\t\trows = addToScheduleTable(organizedData, rows, currentDay, (y % 2 === 0)) //update table\n\t\t\ty++ //iterate current day\n\t\t\tif(y < officeHourSchedule.days.length){ //make sure y doesn't go over the number of days\n\t\t\t\tcurrentDay = officeHourSchedule.days[y] //set current day\n\t\t\t}\n\t\t\torganizedData = []\n\t\t}\n\t}\n\treturn rows\n}\n\nfunction addToScheduleTable(organizedData, rows, currentDay, highlighted){\n\tlet cell = []\n\tlet i = 0, z=0\n\tlet highlight = (highlighted) ? \"highlight\" : \"\";\n\t\n\tcell.push(<td className=\"day\"> {currentDay} </td>) //day.charAt(0).toUpperCase() + day.slice(1).toLowerCase()\n\tfor(z = 0; z < organizedData.length; z++){\n\t\tcell.push( <td align='left'> {organizedData[z].name} </td>)\n\t\tfor(i = 0; i < organizedData[z].time.length; i++){\n\t\t\tif(i > 0){\n\t\t\t\trows.push(<tr className={highlight} id=\"officeHours\"> {cell} </tr>)\n\t\t\t\tcell = []\n\t\t\t\tcell.push(<td></td>)\n\t\t\t\tcell.push(<td></td>)\n\t\t\t}\n\t\t\tcell.push( <td align='right'> {organizedData[z].time[i]} </td>)\n\t\t}\n\t\trows.push(<tr className={highlight} id=\"officeHours\"> {cell} </tr>)\n\t\tcell = []\n\t\tcell.push(<td></td>)\n\t}\n\treturn rows\n}\n\nexport { OfficeHours }\n","import React, { Component } from 'react'\nimport '../style/main.css'\n\nclass Sponsors extends Component {\n    constructor(props) {\n        super(props);\n    }\n\t\n    render() {\n\t\tlet rows = []\n\t\trows = createSponsors(this.props.sponsors)\n        return (\n            <div id='sponsor' align='center'>\n\t\t\t\t<table id = \"sponsors\" style={{width: \"50%\"}}>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{rows}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n        )\n    }\n}\n\nfunction createSponsors(sponsors){\n\tlet i=0, length = 5\n\tlet width = (window.innerWidth/10) + \"px\"\n\tconsole.log(\"This width:\" + width);\n\tlet cell = []\n\tlet row = []\n\tfor(i=0; i<sponsors.length; i++){\n\t\tif(i%length==0){\n\t\t\trow.push(<tr> {cell} </tr>)\n\t\t\tcell = []\n\t\t}\n\t\tcell.push(<td align='center'>\n\t\t\t\t<a href={sponsors[i].link}> <img src={sponsors[i].source} onmouseover={sponsors[i].description} \n\t\t\t\tstyle = {{maxWidth: width, height:\"auto\", maxHeight: \"125px\", width: \"auto\"}}/></a>\n\t\t\t</td>)\n\t}\n\trow.push(<tr> {cell} </tr>)\n\treturn row\n}\n\nconst Styles = {\n    container: {\n        flex: 1,\n\t\t//backgroundColor: '#f0d03b',\n\t\tbackgroundColor: '#000',\n        width: 500,\n        height: 300,\n        flexDirection: 'row',\n        paddingLeft: 5,\n\t\tpaddingRight: 5,\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto'\n    }\n}\n\nexport { Sponsors }\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Header, BodyLayout, Calendar, OfficeHours, Sponsors } from '../components'\r\nimport {\r\n    fetchEvents\r\n} from '../modules'\r\n// import { Link } from 'react-router-dom'\r\nimport '../style/main.css'\r\nimport '../style/components/layout.css'\r\nimport officeHourSchedule from '../data/OfficeHours'\r\nimport sponsors from '../data/Sponsors'\r\nimport events from '../data/Events'\r\nimport bg from '../assets/bg_image.jpg' \r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n\r\n        this.motto = (Math.floor(Math.random() * 100) > 5) ?\r\n            'Working with a group of strangers can be terrifying. SHPE is here to tear down walls and build up friendships. We welcome you to a little something we call \"familia\".' :\r\n            'It is hard to have the competitive advantage in STEM without being left behind. Your SHPE \"familia\" keeps you included. We provide the development opportunities that will keep your future bright.'\r\n\r\n\t\t\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchEvents()\r\n    }\r\n\r\n    render() {\r\n        let eventList;\r\n        if(this.props.eventList)\r\n            eventList = Object.values(this.props.eventList);\r\n        return(\r\n            <body>\r\n                <div id=\"container\">\r\n\t\t\t\t    <Header/>\r\n\t\t\t\t    <div id=\"wrapper\" style={{backgroundColor: '#f0d03b'}}>\r\n                        <div id=\"motto\">\r\n                            <p style={{fontStyle: 'italic'}}>{this.motto}</p>\r\n                        </div>\r\n                        <Calendar \r\n                        numOfEvents={4}\r\n                        title=\"Upcoming Events\"\r\n                        events={eventList}\r\n                        />\r\n                        <OfficeHours officeHourSchedule={officeHourSchedule} />\r\n                        <h2 style={{textAlign:'center'}}>Sponsors</h2>\r\n                        <hr />\r\n                        <Sponsors sponsors={sponsors} />\r\n                    </div>\r\n\t\t\t    </div>\r\n            </body>\r\n        )\r\n    }\r\n}\r\n\r\nconst stylesheet = {\r\n    collapsibleContainer: {\r\n        backgroundColor: '#f00',\r\n        flex: 1\r\n    },\r\n    tableContainer : {\r\n\r\n    },\r\n    tableItem: {\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    eventList: state.events.eventList\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchEvents\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\nimport { Header } from '../components'\nimport '../style/main.css'\n\nexport default class About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: '#fff',\n            header: 'title'\n        }\n    }\n    componentWillMount() {\n        \n    }\n    render() {\n        return (\n            <div id='page'>\n                <Header/>\n               <div style={{flex: 1, width: 'auto', backgroundColor: '#f00'}}>\n                    <h1>hello</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport {\n    connect\n} from 'react-redux'\nimport {\n    Pie\n} from '@nivo/pie'\nimport { Header } from '../components'\nimport {\n    fetchStatistics\n} from '../modules'\nimport '../style/main.css'\n\nclass Sponsor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: '#fff',\n            header: 'title'\n        }\n\n                this.data = [\n                    {\n                    id: \"poop\",\n                    label: \"poop\",\n                    value: 45,\n                    color: \"hsl(80, 70%, 50%)\"\n                    },\n                    {\n                    id: \"two\",\n                    label: \"two\",\n                    value: 50,\n                    color: \"hsl(80, 70%, 50%)\"\n                    },\n                ]\n\n    }\n\n    componentDidMount(){\n        this.props.fetchStatistics();\n    }\n\n    render() {\n        return (\n            <div style={{height: 100}}>\n                <Header/>\n                <div style={{height: 1000}}>\n               <Pie\n        data={this.data}\n        width={500}\n        height={500}\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        colors={{ scheme: 'nivo' }}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n        radialLabelsSkipAngle={10}\n        radialLabelsTextXOffset={6}\n        radialLabelsTextColor=\"#333333\"\n        radialLabelsLinkOffset={0}\n        radialLabelsLinkDiagonalLength={16}\n        radialLabelsLinkHorizontalLength={24}\n        radialLabelsLinkStrokeWidth={1}\n        radialLabelsLinkColor={{ from: 'color' }}\n        slicesLabelsSkipAngle={10}\n        slicesLabelsTextColor=\"#333333\"\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'ruby'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'c'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'go'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'python'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'scala'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'lisp'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'elixir'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'javascript'\n                },\n                id: 'lines'\n            }\n        ]}\n        legends={[\n            {\n                anchor: 'bottom',\n                direction: 'row',\n                translateY: 56,\n                itemWidth: 100,\n                itemHeight: 18,\n                itemTextColor: '#999',\n                symbolSize: 18,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    // statistics: state.statistics.statistics\n})\n\nconst mapDispatchToProps = {\n    fetchStatistics\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sponsor)\n\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport Home from './containers/home'\nimport About from './containers/about'\nimport Sponsor from './containers/sponsor'\nimport firebase from 'firebase';\n\nimport 'sanitize.css/sanitize.css'\n\nconst target = document.querySelector('#root')\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCeX5lUZUmQxXsWNO8gNXVHqfJs-kQmSaY\",\n  authDomain: \"shpe-ucf.firebaseapp.com\",\n  databaseURL: \"https://shpe-ucf.firebaseio.com\",\n  projectId: \"shpe-ucf\",\n  storageBucket: \"shpe-ucf.appspot.com\",\n  messagingSenderId: \"974032317047\",\n  appId: \"1:974032317047:web:0a4a2ad01ac705b90ff472\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={() => (<Home/>)}/>\n          <Route path=\"/Sponsor\" render={() => (<Sponsor/>)}/>\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}